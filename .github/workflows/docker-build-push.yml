name: Docker Build and Push

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Definir o nome da imagem como uma variÃ¡vel de ambiente
      - name: Set image name
        run: echo "IMAGE_NAME=alexandreqrz/core" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      # Notificar o Coolify sobre a nova imagem
      - name: Trigger Coolify Deployment
        if: success()
        run: | 
          curl -X POST "${{ vars.COOLIFY_API_URL }}" \
          -H "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"forcePull": true, "imageTag": "${{ github.sha }}"}'
